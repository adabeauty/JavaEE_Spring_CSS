<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.tw" />

    <mvc:resources mapping="/**" location="/"></mvc:resources>

    <mvc:annotation-driven />

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/views/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <mvc:interceptors>
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <!--<bean class="com.tw.interceptor.HandlerInterceptor"/>-->
        <mvc:interceptor>
            <mvc:mapping path="/users/**"/>
            <mvc:mapping path="/customers/**"/>
            <mvc:mapping path="/courses/**"/>
            <mvc:mapping path="/schedules/**"/>
            <mvc:mapping path="/employees/**"/>
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="com.tw.interceptor.HandlerInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--<bean id="openSessionInView" class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">-->
        <!--<property name="sessionFactory">-->
            <!--<ref bean="sessionFactory"/>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="packagesToScan" value="com.tw" />-->
        <!--<property name="hibernateProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>-->
                <!--<prop key="hibernate.show_sql">true</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="dataSource"-->
          <!--class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
        <!--<property name="driverClassName" value="com.mysql.jdbc.Driver" />-->
        <!--<property name="url" value="jdbc:mysql://localhost:3306/users_management"/>-->
        <!--<property name="username" value="root"/>-->
        <!--<property name="password" value=""/>-->
    <!--</bean>-->

    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

    <!--<bean id="transactionManager"-->
          <!--class="org.springframework.orm.hibernate4.HibernateTransactionManager">-->
        <!--<property name="sessionFactory" ref="sessionFactory"></property>-->
    <!--</bean>-->

</beans>